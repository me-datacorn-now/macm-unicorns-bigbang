Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/jammy64"  # Use the latest version of Ubuntu 22.04 (Jammy Jellyfish)
  config.vm.hostname = ENV['VM_NAME']

  # Set VM resources
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "24576"  # 24GB RAM
    vb.cpus = 8          # 8 CPUs
    vb.name = ENV['VM_NAME']
    vb.gui = true

    # Set the graphics controller
    # login screen will not display properly unless graphics controller is VMSVGA
    vb.customize ["modifyvm", :id, "--graphicscontroller", "VMSVGA"]

    # Set vbguest plugin to auto update Guest Additions
    config.vbguest.auto_update = true
    # config.vbguest.auto_update = false if Vagrant.has_plugin?('vagrant-vbguest')

    # Set video memory to 64 MB
    vb.customize ["modifyvm", :id, "--vram", "64"]

    config.vm.provision "file", source: "./env", destination: "/tmp/env"
  end

  # Give the VM a specific name
  config.vm.define "big-bang-vm" do |bigbang|
    # Shell provisioner to execute commands
    bigbang.vm.provision "shell", inline: <<-SHELL

      export BIGBANG_USER=bigbang
      export BIGBANG_PASSWORD=${BIGBANG_USER}
      export GIT_BRANCH=dev-macm-20240105

      sudo adduser --disabled-password --gecos "" ${BIGBANG_USER}
      echo "${BIGBANG_USER}:${BIGBANG_USER}" | sudo chpasswd 2>/dev/null
      sudo usermod -aG sudo ${BIGBANG_PASSWORD}
      
      # checkout git repos
      mkdir -p /home/${BIGBANG_USER}/git      
      cd /home/${BIGBANG_USER}/git/

      # checkout macm-unicorns-bigbang repo
      git clone -b ${GIT_BRANCH} https://github.com/me-datacorn-now/macm-unicorns-bigbang.git
      cd ./macm-unicorns-bigbang
      sudo mv /tmp/env ./bin
      git log | head      
      cd ..

      # checkout bigbang repo
      git clone https://repo1.dso.mil/big-bang/bigbang.git
      cd ./bigbang      
      git checkout tags/$(grep 'tag:' base/gitrepository.yaml | awk '{print $2}')
      git log | head      

      sudo chown -R ${BIGBANG_USER}:${BIGBANG_USER} /home/${BIGBANG_USER}

      # add 1password repo
      curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg
      echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/amd64 stable main' | sudo tee /etc/apt/sources.list.d/1password.list
      sudo mkdir -p /etc/debsig/policies/AC2D62742012EA22/
      curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
      sudo mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
      curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg

      # add vscodium repo
      wget -qO - https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg \
      | gpg --dearmor \
      | sudo dd of=/usr/share/keyrings/vscodium-archive-keyring.gpg

      echo 'deb [ signed-by=/usr/share/keyrings/vscodium-archive-keyring.gpg ] https://download.vscodium.com/debs vscodium main' \
      | sudo tee /etc/apt/sources.list.d/vscodium.list

      # apt update/upgrade/install
      sudo apt update
      sudo apt -y upgrade

      sudo apt install ubuntu-desktop docker.io codium 1password -y

      sudo apt -y autoremove
      sudo apt clean

      # add user to docker group
      sudo usermod -aG docker ${BIGBANG_USER}      

      # install k3d
      curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash

      # install Helm
      curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      # install kubectl
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x kubectl
      sudo mv kubectl /usr/local/bin/

      # install k9s
      wget https://github.com/derailed/k9s/releases/download/v0.30.8/k9s_linux_amd64.deb
      sudo apt -y install -f ./k9s_linux_amd64.deb
      rm k9s_linux_amd64.deb      

      sudo shutdown now

    SHELL
  end
end
